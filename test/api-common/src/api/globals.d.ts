/* tslint:disable */
/* eslint-disable */
/**
 * 接口文档 公共/第三方 - version 0.0
 *
 *
 *
 * OpenAPI version: 3.0.1
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<any, any, infer RequestConfig, any, infer ResponseHeader>
    ? Omit<AlovaMethodCreateConfig<any, Responded, RequestConfig, ResponseHeader>, 'params'>
    : never;

// Extract the return type of transformData function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transformData'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transformData']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<infer State, infer Export, infer RequestConfig, infer Response, infer ResponseHeader>
    ? Method<
        State,
        Export,
        CurrentConfig extends undefined
          ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
          : CurrentConfig['transformData'] extends (...args: any[]) => any
            ? Awaited<ReturnType<CurrentConfig['transformData']>>
            : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
        any,
        RequestConfig,
        Response,
        ResponseHeader
      >
    : never;

export type UserThirdType = 1 | 2;
export type UserSex = 0 | 1 | 2;
export type UserWeiXin = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。
   */
  subscribe?: number;
  /**
   * 用户的标识，对当前公众号唯一
   */
  openId?: string;
  /**
   * 用户的昵称
   */
  nickName?: string;
  sex?: UserSex;
  /**
   * 用户所在城市
   */
  city?: string;
  /**
   * 用户所在国家
   */
  country?: string;
  /**
   * 用户所在省份
   */
  province?: string;
  /**
   * 用户的语言，简体中文为zh_CN
   */
  language?: string;
  /**
   * 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
   */
  headImgUrl?: string;
  /**
   * 用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间
   */
  subscribeTime?: number;
  /**
   * 只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
   */
  unionId?: string;
  /**
   * 公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
   */
  remark?: string;
  /**
   * 用户所在的分组ID（兼容旧的用户分组接口）
   */
  groupId?: number;
  /**
   * 用户被打上的标签ID列表
   */
  tagidList?: string;
  /**
   * 返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENE_PROFILE_LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_WECHAT_ADVERTISEMENT 微信广告，ADD_SCENE_OTHERS 其他
   */
  subscribeScene?: string;
  /**
   * 二维码扫码场景（开发者自定义）
   */
  qrScene?: number;
  /**
   * 二维码扫码场景描述（开发者自定义）
   */
  qrSceneStr?: string;
  /**
   * 归属公众号
   */
  appId?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 电话
   */
  phone?: string;
  /**
   * 地址
   */
  address?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 用户集合
   */
  users?: User[];
};
export type UserThird = {
  /**
   * 用户ID
   */
  userId?: number;
  /**
   * 菜单ID
   */
  thirdId?: number;
  type?: UserThirdType;
  /**
   * 微信关注
   */
  userWeiXin?: UserWeiXin;
};
export type UserType = 1 | 20 | 80 | 90 | 100;
export type MenuType = 1 | 2 | 3 | 4;
export type Menu = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  /**
   * 菜单标题
   */
  title?: string;
  /**
   * 组件路径
   */
  path?: string;
  /**
   * 权限标识符
   */
  perm?: string;
  /**
   * 是否iframe
   */
  iFrame?: boolean;
  /**
   * 组件
   */
  component?: string;
  /**
   * 组件名称
   */
  componentName?: string;
  /**
   * 父级菜单ID
   */
  parentId?: number;
  /**
   * 排序
   */
  sort?: number;
  /**
   * icon图标
   */
  icon?: string;
  type?: MenuType;
  /**
   * 是否缓存
   */
  keepAlive?: boolean;
  /**
   * 是否隐藏
   */
  hidden?: boolean;
  /**
   * 跳转路由
   */
  redirect?: string;
  /**
   * 根目录始终显示
   */
  alwaysShow?: boolean;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 子菜单集合
   */
  children?: Menu[];
  /**
   * 是否已删除
   */
  isDeleted?: boolean;
  /**
   * 菜单集合
   */
  roles?: Role[];
};
export type Role = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  /**
   * 角色名称
   */
  name?: string;
  type?: UserType;
  /**
   * 是否已删除
   */
  isDeleted?: boolean;
  /**
   * 系统默认配置
   */
  isSys?: boolean;
  /**
   * 备注
   */
  remark?: string;
  /**
   * 角色代码
   */
  code?: string;
  /**
   * 排序
   */
  sort?: number;
  /**
   * 用户
   */
  users?: User[];
  /**
   * 菜单集合
   */
  menus?: Menu[];
};
export type UserDept = {
  /**
   * 用户ID
   */
  userId?: number;
  /**
   * 部门Id
   */
  deptId?: number;
  /**
   * 是否单位管理
   */
  isSys?: boolean;
  /**
   * 是否接收消息
   */
  isMsg?: boolean;
  /**
   * 系统用户
   */
  user?: User;
  /**
   * 公司
   */
  dept?: Dept;
};
export type Dept = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  /**
   * 单位名称
   */
  name?: string;
  /**
   * 简写名称
   */
  easyName?: string;
  /**
   * 父级部门ID
   */
  parentId?: number;
  /**
   * 地址
   */
  address?: string;
  /**
   * 是否删除
   */
  isDeleted?: boolean;
  /**
   * 默认联系电话
   */
  phone?: string;
  /**
   * 默认联系人
   */
  man?: string;
  /**
   * 备注
   */
  remark?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 排序
   */
  sort?: number;
  /**
   * 用户集合
   */
  users?: User[];
  /**
   * 关系集合
   */
  userDepts?: UserDept[];
  /**
   * 子菜单集合
   */
  children?: Dept[];
};
export type User = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  /**
   * 账号
   */
  account?: string;
  /**
   * 昵称
   */
  nickName?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 密码
   */
  password?: string;
  /**
   * 头像路径
   */
  avatar?: string;
  /**
   * 最后修改密码时间
   */
  passwordReSetTime?: string;
  /**
   * 是否已删除
   */
  isDeleted?: boolean;
  /**
   * 客户单位
   */
  roleId?: number;
  /**
   * 登录时间
   */
  loginTime?: string;
  /**
   * 登录时间
   */
  lastLogin?: boolean;
  /**
   * 电话
   */
  phone?: string;
  /**
   * 关系集合
   */
  userThirds?: UserThird[];
  /**
   * 部门集合
   */
  depts?: Dept[];
  /**
   * 角色
   */
  role?: Role;
  /**
   * 关系集合
   */
  userDepts?: UserDept[];
};
export type AddDeptParam = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  /**
   * 单位名称
   */
  name?: string;
  /**
   * 简写名称
   */
  easyName?: string;
  /**
   * 父级部门ID
   */
  parentId?: number;
  /**
   * 地址
   */
  address?: string;
  /**
   * 是否删除
   */
  isDeleted?: boolean;
  /**
   * 默认联系电话
   */
  phone?: string;
  /**
   * 默认联系人
   */
  man?: string;
  /**
   * 备注
   */
  remark?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 排序
   */
  sort?: number;
  /**
   * 用户集合
   */
  users?: User[];
  /**
   * 关系集合
   */
  userDepts?: UserDept[];
  /**
   * 子菜单集合
   */
  children?: Dept[];
};
export type DeptParam = {
  keyWord?: string;
};
export type DeptInfo = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  /**
   * 单位名称
   */
  name?: string;
  /**
   * 简写名称
   */
  easyName?: string;
  /**
   * 父级部门ID
   */
  parentId?: number;
  /**
   * 地址
   */
  address?: string;
  /**
   * 是否删除
   */
  isDeleted?: boolean;
  /**
   * 默认联系电话
   */
  phone?: string;
  /**
   * 默认联系人
   */
  man?: string;
  /**
   * 备注
   */
  remark?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 排序
   */
  sort?: number;
  /**
   * 用户集合
   */
  users?: User[];
  /**
   * 关系集合
   */
  userDepts?: UserDept[];
  /**
   * 子菜单集合
   */
  children?: Dept[];
};
export type DeptSelect = {
  /**
   * 主键Id!
   */
  id?: number;
  /**
   * 单位名称
   */
  name?: string;
  /**
   * 地址
   */
  address?: string;
  /**
   * 父级部门ID
   */
  parentId?: number;
};
declare global {
  interface Apis {
    Dept: {
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Dept/Add
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   // 单位名称
       *   name?: string
       *   // 简写名称
       *   easyName?: string
       *   // 父级部门ID
       *   parentId?: number
       *   // 地址
       *   address?: string
       *   // 是否删除
       *   isDeleted?: boolean
       *   // 默认联系电话
       *   phone?: string
       *   // 默认联系人
       *   man?: string
       *   // 备注
       *   remark?: string
       *   // 状态
       *   state?: boolean
       *   // 排序
       *   sort?: number
       *   // 用户集合
       *   users?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     // 账号
       *     account?: string
       *     // 昵称
       *     nickName?: string
       *     // 状态
       *     state?: boolean
       *     // 密码
       *     password?: string
       *     // 头像路径
       *     avatar?: string
       *     // 最后修改密码时间
       *     passwordReSetTime?: string
       *     // 是否已删除
       *     isDeleted?: boolean
       *     // 客户单位
       *     roleId?: number
       *     // 登录时间
       *     loginTime?: string
       *     // 登录时间
       *     lastLogin?: boolean
       *     // 电话
       *     phone?: string
       *     // 关系集合
       *     userThirds?: Array<{
       *       // 用户ID
       *       userId?: number
       *       // 菜单ID
       *       thirdId?: number
       *       type?: 1 | 2
       *       // 微信关注
       *       userWeiXin?: {
       *         // 主键
       *         id?: number
       *         // 用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。
       *         subscribe?: number
       *         // 用户的标识，对当前公众号唯一
       *         openId?: string
       *         // 用户的昵称
       *         nickName?: string
       *         sex?: 0 | 1 | 2
       *         // 用户所在城市
       *         city?: string
       *         // 用户所在国家
       *         country?: string
       *         // 用户所在省份
       *         province?: string
       *         // 用户的语言，简体中文为zh_CN
       *         language?: string
       *         // 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
       *         headImgUrl?: string
       *         // 用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间
       *         subscribeTime?: number
       *         // 只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
       *         unionId?: string
       *         // 公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
       *         remark?: string
       *         // 用户所在的分组ID（兼容旧的用户分组接口）
       *         groupId?: number
       *         // 用户被打上的标签ID列表
       *         tagidList?: string
       *         // 返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENE_PROFILE_LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_WECHAT_ADVERTISEMENT 微信广告，ADD_SCENE_OTHERS 其他
       *         subscribeScene?: string
       *         // 二维码扫码场景（开发者自定义）
       *         qrScene?: number
       *         // 二维码扫码场景描述（开发者自定义）
       *         qrSceneStr?: string
       *         // 归属公众号
       *         appId?: string
       *         // 创建时间
       *         createTime?: string
       *         // 电话
       *         phone?: string
       *         // 地址
       *         address?: string
       *         // 状态
       *         state?: boolean
       *         // 用户集合
       *         users?: Array<User>
       *       }
       *     }>
       *     // 部门集合
       *     depts?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       // 单位名称
       *       name?: string
       *       // 简写名称
       *       easyName?: string
       *       // 父级部门ID
       *       parentId?: number
       *       // 地址
       *       address?: string
       *       // 是否删除
       *       isDeleted?: boolean
       *       // 默认联系电话
       *       phone?: string
       *       // 默认联系人
       *       man?: string
       *       // 备注
       *       remark?: string
       *       // 状态
       *       state?: boolean
       *       // 排序
       *       sort?: number
       *       // 用户集合
       *       users?: Array<User>
       *       // 关系集合
       *       userDepts?: Array<{
       *         // 用户ID
       *         userId?: number
       *         // 部门Id
       *         deptId?: number
       *         // 是否单位管理
       *         isSys?: boolean
       *         // 是否接收消息
       *         isMsg?: boolean
       *         // 系统用户
       *         user?: User
       *         // 公司
       *         dept?: Dept
       *       }>
       *       // 子菜单集合
       *       children?: Array<Dept>
       *     }>
       *     // 角色
       *     role?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       // 角色名称
       *       name?: string
       *       type?: 1 | 20 | 80 | 90 | 100
       *       // 是否已删除
       *       isDeleted?: boolean
       *       // 系统默认配置
       *       isSys?: boolean
       *       // 备注
       *       remark?: string
       *       // 角色代码
       *       code?: string
       *       // 排序
       *       sort?: number
       *       // 用户
       *       users?: Array<User>
       *       // 菜单集合
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         // 菜单标题
       *         title?: string
       *         // 组件路径
       *         path?: string
       *         // 权限标识符
       *         perm?: string
       *         // 是否iframe
       *         iFrame?: boolean
       *         // 组件
       *         component?: string
       *         // 组件名称
       *         componentName?: string
       *         // 父级菜单ID
       *         parentId?: number
       *         // 排序
       *         sort?: number
       *         // icon图标
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         // 是否缓存
       *         keepAlive?: boolean
       *         // 是否隐藏
       *         hidden?: boolean
       *         // 跳转路由
       *         redirect?: string
       *         // 根目录始终显示
       *         alwaysShow?: boolean
       *         // 状态
       *         state?: boolean
       *         // 子菜单集合
       *         children?: Array<Menu>
       *         // 是否已删除
       *         isDeleted?: boolean
       *         // 菜单集合
       *         roles?: Array<Role>
       *       }>
       *     }
       *     // 关系集合
       *     userDepts?: Array<UserDept>
       *   }>
       *   // 关系集合
       *   userDepts?: Array<UserDept>
       *   // 子菜单集合
       *   children?: Array<Dept>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = number
       * ```
       */
      post_api_dept_add<
        Config extends Alova2MethodConfig<number> & {
          data: AddDeptParam;
        }
      >(
        config: Config
      ): Alova2Method<number, 'Dept.post_api_dept_add', Config>;
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Dept/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = number
       * ```
       */
      delete_api_dept_delete<
        Config extends Alova2MethodConfig<number> & {
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<number, 'Dept.delete_api_dept_delete', Config>;
      /**
       * ---
       *
       * [POST] 导出
       *
       * **path:** /api/Dept/Download
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   keyWord?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = unknown
       * ```
       */
      post_api_dept_download<
        Config extends Alova2MethodConfig<unknown> & {
          data: DeptParam;
        }
      >(
        config: Config
      ): Alova2Method<unknown, 'Dept.post_api_dept_download', Config>;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Dept/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   // 单位名称
       *   name?: string
       *   // 简写名称
       *   easyName?: string
       *   // 父级部门ID
       *   parentId?: number
       *   // 地址
       *   address?: string
       *   // 是否删除
       *   isDeleted?: boolean
       *   // 默认联系电话
       *   phone?: string
       *   // 默认联系人
       *   man?: string
       *   // 备注
       *   remark?: string
       *   // 状态
       *   state?: boolean
       *   // 排序
       *   sort?: number
       *   // 用户集合
       *   users?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     // 账号
       *     account?: string
       *     // 昵称
       *     nickName?: string
       *     // 状态
       *     state?: boolean
       *     // 密码
       *     password?: string
       *     // 头像路径
       *     avatar?: string
       *     // 最后修改密码时间
       *     passwordReSetTime?: string
       *     // 是否已删除
       *     isDeleted?: boolean
       *     // 客户单位
       *     roleId?: number
       *     // 登录时间
       *     loginTime?: string
       *     // 登录时间
       *     lastLogin?: boolean
       *     // 电话
       *     phone?: string
       *     // 关系集合
       *     userThirds?: Array<{
       *       // 用户ID
       *       userId?: number
       *       // 菜单ID
       *       thirdId?: number
       *       type?: 1 | 2
       *       // 微信关注
       *       userWeiXin?: {
       *         // 主键
       *         id?: number
       *         // 用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。
       *         subscribe?: number
       *         // 用户的标识，对当前公众号唯一
       *         openId?: string
       *         // 用户的昵称
       *         nickName?: string
       *         sex?: 0 | 1 | 2
       *         // 用户所在城市
       *         city?: string
       *         // 用户所在国家
       *         country?: string
       *         // 用户所在省份
       *         province?: string
       *         // 用户的语言，简体中文为zh_CN
       *         language?: string
       *         // 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
       *         headImgUrl?: string
       *         // 用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间
       *         subscribeTime?: number
       *         // 只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
       *         unionId?: string
       *         // 公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
       *         remark?: string
       *         // 用户所在的分组ID（兼容旧的用户分组接口）
       *         groupId?: number
       *         // 用户被打上的标签ID列表
       *         tagidList?: string
       *         // 返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENE_PROFILE_LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_WECHAT_ADVERTISEMENT 微信广告，ADD_SCENE_OTHERS 其他
       *         subscribeScene?: string
       *         // 二维码扫码场景（开发者自定义）
       *         qrScene?: number
       *         // 二维码扫码场景描述（开发者自定义）
       *         qrSceneStr?: string
       *         // 归属公众号
       *         appId?: string
       *         // 创建时间
       *         createTime?: string
       *         // 电话
       *         phone?: string
       *         // 地址
       *         address?: string
       *         // 状态
       *         state?: boolean
       *         // 用户集合
       *         users?: Array<User>
       *       }
       *     }>
       *     // 部门集合
       *     depts?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       // 单位名称
       *       name?: string
       *       // 简写名称
       *       easyName?: string
       *       // 父级部门ID
       *       parentId?: number
       *       // 地址
       *       address?: string
       *       // 是否删除
       *       isDeleted?: boolean
       *       // 默认联系电话
       *       phone?: string
       *       // 默认联系人
       *       man?: string
       *       // 备注
       *       remark?: string
       *       // 状态
       *       state?: boolean
       *       // 排序
       *       sort?: number
       *       // 用户集合
       *       users?: Array<User>
       *       // 关系集合
       *       userDepts?: Array<{
       *         // 用户ID
       *         userId?: number
       *         // 部门Id
       *         deptId?: number
       *         // 是否单位管理
       *         isSys?: boolean
       *         // 是否接收消息
       *         isMsg?: boolean
       *         // 系统用户
       *         user?: User
       *         // 公司
       *         dept?: Dept
       *       }>
       *       // 子菜单集合
       *       children?: Array<Dept>
       *     }>
       *     // 角色
       *     role?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       // 角色名称
       *       name?: string
       *       type?: 1 | 20 | 80 | 90 | 100
       *       // 是否已删除
       *       isDeleted?: boolean
       *       // 系统默认配置
       *       isSys?: boolean
       *       // 备注
       *       remark?: string
       *       // 角色代码
       *       code?: string
       *       // 排序
       *       sort?: number
       *       // 用户
       *       users?: Array<User>
       *       // 菜单集合
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         // 菜单标题
       *         title?: string
       *         // 组件路径
       *         path?: string
       *         // 权限标识符
       *         perm?: string
       *         // 是否iframe
       *         iFrame?: boolean
       *         // 组件
       *         component?: string
       *         // 组件名称
       *         componentName?: string
       *         // 父级菜单ID
       *         parentId?: number
       *         // 排序
       *         sort?: number
       *         // icon图标
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         // 是否缓存
       *         keepAlive?: boolean
       *         // 是否隐藏
       *         hidden?: boolean
       *         // 跳转路由
       *         redirect?: string
       *         // 根目录始终显示
       *         alwaysShow?: boolean
       *         // 状态
       *         state?: boolean
       *         // 子菜单集合
       *         children?: Array<Menu>
       *         // 是否已删除
       *         isDeleted?: boolean
       *         // 菜单集合
       *         roles?: Array<Role>
       *       }>
       *     }
       *     // 关系集合
       *     userDepts?: Array<UserDept>
       *   }>
       *   // 关系集合
       *   userDepts?: Array<{
       *     // 用户ID
       *     userId?: number
       *     // 部门Id
       *     deptId?: number
       *     // 是否单位管理
       *     isSys?: boolean
       *     // 是否接收消息
       *     isMsg?: boolean
       *     // 系统用户
       *     user?: User
       *     // 公司
       *     dept?: Dept
       *   }>
       *   // 子菜单集合
       *   children?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     // 单位名称
       *     name?: string
       *     // 简写名称
       *     easyName?: string
       *     // 父级部门ID
       *     parentId?: number
       *     // 地址
       *     address?: string
       *     // 是否删除
       *     isDeleted?: boolean
       *     // 默认联系电话
       *     phone?: string
       *     // 默认联系人
       *     man?: string
       *     // 备注
       *     remark?: string
       *     // 状态
       *     state?: boolean
       *     // 排序
       *     sort?: number
       *     // 用户集合
       *     users?: Array<User>
       *     // 关系集合
       *     userDepts?: Array<{
       *       // 用户ID
       *       userId?: number
       *       // 部门Id
       *       deptId?: number
       *       // 是否单位管理
       *       isSys?: boolean
       *       // 是否接收消息
       *       isMsg?: boolean
       *       // 系统用户
       *       user?: User
       *       // 公司
       *       dept?: Dept
       *     }>
       *     // 子菜单集合
       *     children?: Array<Dept>
       *   }>
       * }
       * ```
       */
      get_api_dept_getinfo<
        Config extends Alova2MethodConfig<DeptInfo> & {
          params: {
            id?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<DeptInfo, 'Dept.get_api_dept_getinfo', Config>;
      /**
       * ---
       *
       * [GET] 列表
       *
       * **path:** /api/Dept/GetList
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = Array<{
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   // 单位名称
       *   name?: string
       *   // 简写名称
       *   easyName?: string
       *   // 父级部门ID
       *   parentId?: number
       *   // 地址
       *   address?: string
       *   // 是否删除
       *   isDeleted?: boolean
       *   // 默认联系电话
       *   phone?: string
       *   // 默认联系人
       *   man?: string
       *   // 备注
       *   remark?: string
       *   // 状态
       *   state?: boolean
       *   // 排序
       *   sort?: number
       *   // 用户集合
       *   users?: Array<User>
       *   // 关系集合
       *   userDepts?: Array<{
       *     // 用户ID
       *     userId?: number
       *     // 部门Id
       *     deptId?: number
       *     // 是否单位管理
       *     isSys?: boolean
       *     // 是否接收消息
       *     isMsg?: boolean
       *     // 系统用户
       *     user?: User
       *     // 公司
       *     dept?: Dept
       *   }>
       *   // 子菜单集合
       *   children?: Array<Dept>
       * }>
       * ```
       */
      get_api_dept_getlist<
        Config extends Alova2MethodConfig<Dept[]> & {
          params: {
            KeyWord?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<Dept[], 'Dept.get_api_dept_getlist', Config>;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Dept/Select
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   parentId?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = Array<{
       *   // 主键Id!
       *   id?: number
       *   // 单位名称
       *   name?: string
       *   // 地址
       *   address?: string
       *   // 父级部门ID
       *   parentId?: number
       * }>
       * ```
       */
      get_api_dept_select<
        Config extends Alova2MethodConfig<DeptSelect[]> & {
          params: {
            parentId?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<DeptSelect[], 'Dept.get_api_dept_select', Config>;
      /**
       * ---
       *
       * [PUT] 编辑
       *
       * **path:** /api/Dept/Update
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   // 单位名称
       *   name?: string
       *   // 简写名称
       *   easyName?: string
       *   // 父级部门ID
       *   parentId?: number
       *   // 地址
       *   address?: string
       *   // 是否删除
       *   isDeleted?: boolean
       *   // 默认联系电话
       *   phone?: string
       *   // 默认联系人
       *   man?: string
       *   // 备注
       *   remark?: string
       *   // 状态
       *   state?: boolean
       *   // 排序
       *   sort?: number
       *   // 用户集合
       *   users?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     // 账号
       *     account?: string
       *     // 昵称
       *     nickName?: string
       *     // 状态
       *     state?: boolean
       *     // 密码
       *     password?: string
       *     // 头像路径
       *     avatar?: string
       *     // 最后修改密码时间
       *     passwordReSetTime?: string
       *     // 是否已删除
       *     isDeleted?: boolean
       *     // 客户单位
       *     roleId?: number
       *     // 登录时间
       *     loginTime?: string
       *     // 登录时间
       *     lastLogin?: boolean
       *     // 电话
       *     phone?: string
       *     // 关系集合
       *     userThirds?: Array<{
       *       // 用户ID
       *       userId?: number
       *       // 菜单ID
       *       thirdId?: number
       *       type?: 1 | 2
       *       // 微信关注
       *       userWeiXin?: {
       *         // 主键
       *         id?: number
       *         // 用户是否订阅该公众号标识，值为0时，代表此用户没有关注该公众号，拉取不到其余信息。
       *         subscribe?: number
       *         // 用户的标识，对当前公众号唯一
       *         openId?: string
       *         // 用户的昵称
       *         nickName?: string
       *         sex?: 0 | 1 | 2
       *         // 用户所在城市
       *         city?: string
       *         // 用户所在国家
       *         country?: string
       *         // 用户所在省份
       *         province?: string
       *         // 用户的语言，简体中文为zh_CN
       *         language?: string
       *         // 用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
       *         headImgUrl?: string
       *         // 用户关注时间，为时间戳。如果用户曾多次关注，则取最后关注时间
       *         subscribeTime?: number
       *         // 只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段。
       *         unionId?: string
       *         // 公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
       *         remark?: string
       *         // 用户所在的分组ID（兼容旧的用户分组接口）
       *         groupId?: number
       *         // 用户被打上的标签ID列表
       *         tagidList?: string
       *         // 返回用户关注的渠道来源，ADD_SCENE_SEARCH 公众号搜索，ADD_SCENE_ACCOUNT_MIGRATION 公众号迁移，ADD_SCENE_PROFILE_CARD 名片分享，ADD_SCENE_QR_CODE 扫描二维码，ADD_SCENE_PROFILE_LINK 图文页内名称点击，ADD_SCENE_PROFILE_ITEM 图文页右上角菜单，ADD_SCENE_PAID 支付后关注，ADD_SCENE_WECHAT_ADVERTISEMENT 微信广告，ADD_SCENE_OTHERS 其他
       *         subscribeScene?: string
       *         // 二维码扫码场景（开发者自定义）
       *         qrScene?: number
       *         // 二维码扫码场景描述（开发者自定义）
       *         qrSceneStr?: string
       *         // 归属公众号
       *         appId?: string
       *         // 创建时间
       *         createTime?: string
       *         // 电话
       *         phone?: string
       *         // 地址
       *         address?: string
       *         // 状态
       *         state?: boolean
       *         // 用户集合
       *         users?: Array<User>
       *       }
       *     }>
       *     // 部门集合
       *     depts?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       // 单位名称
       *       name?: string
       *       // 简写名称
       *       easyName?: string
       *       // 父级部门ID
       *       parentId?: number
       *       // 地址
       *       address?: string
       *       // 是否删除
       *       isDeleted?: boolean
       *       // 默认联系电话
       *       phone?: string
       *       // 默认联系人
       *       man?: string
       *       // 备注
       *       remark?: string
       *       // 状态
       *       state?: boolean
       *       // 排序
       *       sort?: number
       *       // 用户集合
       *       users?: Array<User>
       *       // 关系集合
       *       userDepts?: Array<{
       *         // 用户ID
       *         userId?: number
       *         // 部门Id
       *         deptId?: number
       *         // 是否单位管理
       *         isSys?: boolean
       *         // 是否接收消息
       *         isMsg?: boolean
       *         // 系统用户
       *         user?: User
       *         // 公司
       *         dept?: Dept
       *       }>
       *       // 子菜单集合
       *       children?: Array<Dept>
       *     }>
       *     // 角色
       *     role?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       // 角色名称
       *       name?: string
       *       type?: 1 | 20 | 80 | 90 | 100
       *       // 是否已删除
       *       isDeleted?: boolean
       *       // 系统默认配置
       *       isSys?: boolean
       *       // 备注
       *       remark?: string
       *       // 角色代码
       *       code?: string
       *       // 排序
       *       sort?: number
       *       // 用户
       *       users?: Array<User>
       *       // 菜单集合
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         // 菜单标题
       *         title?: string
       *         // 组件路径
       *         path?: string
       *         // 权限标识符
       *         perm?: string
       *         // 是否iframe
       *         iFrame?: boolean
       *         // 组件
       *         component?: string
       *         // 组件名称
       *         componentName?: string
       *         // 父级菜单ID
       *         parentId?: number
       *         // 排序
       *         sort?: number
       *         // icon图标
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         // 是否缓存
       *         keepAlive?: boolean
       *         // 是否隐藏
       *         hidden?: boolean
       *         // 跳转路由
       *         redirect?: string
       *         // 根目录始终显示
       *         alwaysShow?: boolean
       *         // 状态
       *         state?: boolean
       *         // 子菜单集合
       *         children?: Array<Menu>
       *         // 是否已删除
       *         isDeleted?: boolean
       *         // 菜单集合
       *         roles?: Array<Role>
       *       }>
       *     }
       *     // 关系集合
       *     userDepts?: Array<UserDept>
       *   }>
       *   // 关系集合
       *   userDepts?: Array<UserDept>
       *   // 子菜单集合
       *   children?: Array<Dept>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = number
       * ```
       */
      put_api_dept_update<
        Config extends Alova2MethodConfig<number> & {
          data: AddDeptParam;
        }
      >(
        config: Config
      ): Alova2Method<number, 'Dept.put_api_dept_update', Config>;
    };
  }

  var Apis: Apis;
}
